{ parameter
    (or (or %asset
           (or (or %admin
                  (or (unit %confirm_admin) (bool %pause))
                  (or (address %remove_admin) (address %set_admin)))
               (or %assets
                  (or (pair %balance_of
                         (list %requests (pair (address %owner) (nat %token_id)))
                         (contract %callback
                            (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                      (list %transfer
                         (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))))
                  (list %update_operators
                     (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                         (pair %remove_operator (address %owner) (address %operator) (nat %token_id))))))
           (or (or %minter
                  (or (list %burn (pair (address %owner) (list %tokens nat)))
                      (list %mint
                         (pair (address %owner)
                               (list %tokens (pair (nat %token_id) (map %token_info string bytes))))))
                  (or (unit %mint_freeze) (never %never)))
               (or %minter_admin (address %add_minter) (address %remove_minter))))
        (unit %subscriptions)) ;
  storage
    (pair (pair %asset
             (pair (pair (pair %admin
                            (pair (set %admins address) (bool %paused))
                            (big_map %pending_admins address unit))
                         (pair %assets
                            (pair (big_map %ledger nat address)
                                  (big_map %operators (pair address address nat) unit))
                            (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                   (big_map %metadata string bytes)
                   (bool %minter))
             (big_map %minter_admin address unit))
          (mutez %price)) ;
  code { UNIT ;
         LAMBDA
           (pair unit (pair (pair (set address) bool) (big_map address unit)))
           unit
           { UNPAIR ;
             SWAP ;
             CAR ;
             CAR ;
             SENDER ;
             MEM ;
             NOT ;
             IF { DROP ; PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} } ;
         DUP 2 ;
         APPLY ;
         PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         PUSH string "FA2_NOT_OWNER" ;
         DIG 5 ;
         UNPAIR ;
         IF_LEFT
           { DUP 2 ;
             CAR ;
             SWAP ;
             IF_LEFT
               { IF_LEFT
                   { DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DROP 3 ;
                     DUP 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     IF_LEFT
                       { DIG 5 ;
                         DROP ;
                         IF_LEFT
                           { DIG 4 ;
                             DROP 2 ;
                             DUP ;
                             CDR ;
                             SENDER ;
                             MEM ;
                             IF { DUP ;
                                  DUP 2 ;
                                  CAR ;
                                  DUP 3 ;
                                  CAR ;
                                  CAR ;
                                  SENDER ;
                                  PUSH bool True ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 1 ;
                                  UPDATE 1 ;
                                  SWAP ;
                                  CDR ;
                                  SENDER ;
                                  NONE unit ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 2 }
                                { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } }
                           { DUP 2 ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP 2 ;
                             DIG 2 ;
                             CAR ;
                             DIG 2 ;
                             UPDATE 2 ;
                             UPDATE 1 } }
                       { IF_LEFT
                           { DIG 5 ;
                             DROP ;
                             DUP 2 ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             PUSH nat 1 ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             SIZE ;
                             COMPARE ;
                             EQ ;
                             IF { DROP 2 ; PUSH string "LAST_ADMIN" ; FAILWITH }
                                { DUP 2 ;
                                  DUP 3 ;
                                  CAR ;
                                  DIG 3 ;
                                  CAR ;
                                  CAR ;
                                  DIG 3 ;
                                  PUSH bool False ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 1 ;
                                  UPDATE 1 } }
                           { DUP 2 ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP 2 ;
                             DIG 2 ;
                             CDR ;
                             DIG 5 ;
                             DIG 3 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 2 } } ;
                     NIL operation ;
                     DUP 3 ;
                     DIG 3 ;
                     CAR ;
                     DUP ;
                     CAR ;
                     DIG 4 ;
                     UPDATE 1 ;
                     UPDATE 1 ;
                     UPDATE 1 }
                   { DIG 6 ;
                     DROP ;
                     DUP 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     IF { PUSH string "PAUSED" ; FAILWITH } {} ;
                     DUP 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     IF_LEFT
                       { DIG 4 ;
                         DIG 7 ;
                         DROP 2 ;
                         IF_LEFT
                           { DIG 4 ;
                             DROP ;
                             DUP ;
                             CAR ;
                             MAP { DUP 3 ;
                                   CAR ;
                                   CAR ;
                                   DUP 2 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE
                                     { DROP ; DUP 5 ; FAILWITH }
                                     { DUP 2 ;
                                       CAR ;
                                       SWAP ;
                                       COMPARE ;
                                       EQ ;
                                       IF { PUSH nat 1 } { PUSH nat 0 } ;
                                       SWAP ;
                                       PAIR } } ;
                             DIG 5 ;
                             DROP ;
                             SWAP ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS }
                           { DUP 2 ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             ITER { SWAP ;
                                    DUP 2 ;
                                    CDR ;
                                    ITER { SWAP ;
                                           PUSH nat 0 ;
                                           DUP 3 ;
                                           GET 4 ;
                                           COMPARE ;
                                           EQ ;
                                           IF { SWAP ; DROP }
                                              { PUSH nat 1 ;
                                                DUP 3 ;
                                                GET 4 ;
                                                COMPARE ;
                                                NEQ ;
                                                IF { DROP 2 ; DUP 5 ; FAILWITH }
                                                   { DUP ;
                                                     DUP 3 ;
                                                     GET 3 ;
                                                     GET ;
                                                     IF_NONE
                                                       { DROP 2 ; DUP 6 ; FAILWITH }
                                                       { DUP 4 ;
                                                         CAR ;
                                                         DUP 2 ;
                                                         COMPARE ;
                                                         NEQ ;
                                                         IF { DROP 3 ; DUP 5 ; FAILWITH }
                                                            { DUP 5 ;
                                                              CAR ;
                                                              CDR ;
                                                              DUP 4 ;
                                                              GET 3 ;
                                                              PAIR ;
                                                              SENDER ;
                                                              DUG 2 ;
                                                              UNPAIR ;
                                                              DUP 4 ;
                                                              DUP 4 ;
                                                              COMPARE ;
                                                              EQ ;
                                                              IF { DROP 4 }
                                                                 { DIG 3 ;
                                                                   PAIR ;
                                                                   DIG 2 ;
                                                                   PAIR ;
                                                                   MEM ;
                                                                   IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } ;
                                                              DUP 2 ;
                                                              CAR ;
                                                              SOME ;
                                                              DIG 2 ;
                                                              GET 3 ;
                                                              UPDATE } } } } } ;
                                    SWAP ;
                                    DROP } ;
                             DIG 4 ;
                             DIG 5 ;
                             DROP 2 ;
                             DUP 2 ;
                             DIG 2 ;
                             CAR ;
                             DIG 2 ;
                             UPDATE 1 ;
                             UPDATE 1 ;
                             NIL operation } }
                       { DIG 5 ;
                         DIG 6 ;
                         DROP 2 ;
                         SENDER ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         ITER { SWAP ;
                                DUP 3 ;
                                DUP 3 ;
                                IF_LEFT {} {} ;
                                CAR ;
                                COMPARE ;
                                EQ ;
                                IF {} { DUP 7 ; FAILWITH } ;
                                SWAP ;
                                IF_LEFT
                                  { SWAP ;
                                    DUP 8 ;
                                    SOME ;
                                    DUP 3 ;
                                    GET 4 ;
                                    DUP 4 ;
                                    GET 3 ;
                                    PAIR ;
                                    DIG 3 ;
                                    CAR ;
                                    PAIR ;
                                    UPDATE }
                                  { SWAP ;
                                    DUP 2 ;
                                    GET 4 ;
                                    DUP 3 ;
                                    GET 3 ;
                                    PAIR ;
                                    DIG 2 ;
                                    CAR ;
                                    PAIR ;
                                    NONE unit ;
                                    SWAP ;
                                    UPDATE } } ;
                         SWAP ;
                         DIG 5 ;
                         DIG 6 ;
                         DROP 3 ;
                         DUP 2 ;
                         DIG 2 ;
                         CAR ;
                         DIG 2 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         NIL operation } ;
                     DUP 3 ;
                     DIG 3 ;
                     CAR ;
                     DUP ;
                     CAR ;
                     DIG 4 ;
                     UPDATE 2 ;
                     UPDATE 1 ;
                     UPDATE 1 } ;
                 SWAP }
               { DIG 4 ;
                 DROP ;
                 IF_LEFT
                   { DIG 5 ;
                     DIG 6 ;
                     DROP 2 ;
                     DUP 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     IF { PUSH string "PAUSED" ; FAILWITH } {} ;
                     DUP 2 ;
                     CDR ;
                     SENDER ;
                     MEM ;
                     IF {} { PUSH string "NOT_MINTER" ; FAILWITH } ;
                     DUP 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     IF_LEFT
                       { IF_LEFT
                           { DUP 3 ;
                             IF { PUSH string "FROZEN" ; FAILWITH } {} ;
                             DUP 2 ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             ITER { SWAP ;
                                    DUP 2 ;
                                    CDR ;
                                    ITER { SWAP ;
                                           DUP ;
                                           DUP 3 ;
                                           GET ;
                                           IF_NONE
                                             { DROP 2 ; DUP 7 ; FAILWITH }
                                             { DUP 4 ;
                                               CAR ;
                                               SWAP ;
                                               COMPARE ;
                                               NEQ ;
                                               IF { DROP 2 ; DUP 6 ; FAILWITH } { SWAP ; NONE address ; SWAP ; UPDATE } } } ;
                                    SWAP ;
                                    DROP } ;
                             DIG 5 ;
                             DIG 6 ;
                             DROP 2 ;
                             DIG 2 ;
                             DUP 3 ;
                             DIG 3 ;
                             CAR ;
                             DIG 3 ;
                             UPDATE 1 ;
                             UPDATE 1 }
                           { DIG 5 ;
                             DIG 6 ;
                             DROP 2 ;
                             DUP 3 ;
                             IF { PUSH string "FROZEN" ; FAILWITH } {} ;
                             DUP 2 ;
                             CDR ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             ITER { SWAP ;
                                    DUP 2 ;
                                    CDR ;
                                    ITER { SWAP ;
                                           DUP ;
                                           CDR ;
                                           DUP 3 ;
                                           CAR ;
                                           MEM ;
                                           IF { DROP 2 ; PUSH string "USED_TOKEN_ID" ; FAILWITH }
                                              { DUP ;
                                                CDR ;
                                                DUP 3 ;
                                                DUP 4 ;
                                                CAR ;
                                                SWAP ;
                                                SOME ;
                                                SWAP ;
                                                UPDATE ;
                                                SWAP ;
                                                CAR ;
                                                DUP 4 ;
                                                CAR ;
                                                DIG 3 ;
                                                CAR ;
                                                SWAP ;
                                                SOME ;
                                                SWAP ;
                                                UPDATE ;
                                                PAIR } } ;
                                    SWAP ;
                                    DROP } ;
                             DIG 2 ;
                             DUP 3 ;
                             DIG 3 ;
                             CAR ;
                             DUP 4 ;
                             CAR ;
                             UPDATE 1 ;
                             UPDATE 1 ;
                             DIG 2 ;
                             CDR ;
                             UPDATE 2 } ;
                         PAIR }
                       { DIG 2 ;
                         DIG 5 ;
                         DIG 6 ;
                         DROP 3 ;
                         IF_LEFT
                           { DROP ; PUSH bool True ; SWAP ; PAIR }
                           { DROP 2 ; PUSH string "INVALID_INVOCATION" ; FAILWITH } } ;
                     UNPAIR ;
                     DUP 3 ;
                     DIG 3 ;
                     CAR ;
                     DUP ;
                     CAR ;
                     DIG 3 ;
                     UPDATE 2 ;
                     UPDATE 1 ;
                     UPDATE 1 ;
                     DUP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     DIG 3 ;
                     UPDATE 2 ;
                     UPDATE 2 ;
                     UPDATE 1 ;
                     NIL operation }
                   { DIG 3 ;
                     DIG 4 ;
                     DROP 2 ;
                     DUP 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP 2 ;
                     CDR ;
                     SWAP ;
                     IF_LEFT
                       { SWAP ; DIG 4 ; DIG 2 ; SWAP ; SOME ; SWAP ; UPDATE }
                       { DIG 4 ; DROP ; NONE unit ; SWAP ; UPDATE } ;
                     NIL operation ;
                     DUG 2 ;
                     UPDATE 2 ;
                     SWAP } } ;
             DUG 2 ;
             UPDATE 1 ;
             SWAP }
           { DIG 2 ; DIG 3 ; DIG 4 ; DIG 5 ; DIG 6 ; DROP 6 ; NIL operation } ;
         PAIR } }

