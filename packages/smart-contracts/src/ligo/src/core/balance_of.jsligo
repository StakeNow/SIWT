/*
 * Copyright (C) 2022, vDL Digital Ventures GmbH <info@vdl.digital>
 *
 * SPDX-License-Identifier: MIT
 */

#import "../storage.jsligo" "Storage"
#import "./storage.jsligo" "FA2_Storage"

export namespace Types {
  export type request = {
    owner    : address,
    token_id : nat,
  };

  type callback = 
  // @layout:comb
  {
    request : request,
    balance : nat,
  };

  export type balance_of =
  // @layout:comb
  {
    requests : list<request>,
    callback : contract<list<callback>>,
  };
};

const balance_of = ([b, store] : [Types.balance_of, Storage.Types.store]): [list<operation>, Storage.Types.store] => {
  const { requests, callback } = b;
  const get_balance_info = (request: Types.request): Types.callback => {
    const { owner, token_id } = request;
    FA2_Storage.assert_token_exist([store, token_id]); 
    let balance_ = 0 as nat;
    if (FA2_Storage.is_owner_of([store, owner, token_id])) {
      balance_ = 1 as nat;
    }

    return ({
      request: request,
      balance: balance_
    });
  };
  const callback_param = List.map(get_balance_info, requests);
  const operation = Tezos.transaction(callback_param, (0 as tez), callback);

  return [list([operation]), store];
};
