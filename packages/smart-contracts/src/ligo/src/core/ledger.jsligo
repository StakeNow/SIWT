/*
 * Copyright (c) 2021 Pierre-Emmanuel Wulfman, Sander Spies, Melwyn Saldanha and ligolang.
 * Copyright (C) 2022, vDL Digital Ventures GmbH <info@vdl.digital>
 *
 * SPDX-License-Identifier: MIT
 */

#import "./errors.jsligo" "FA2_Errors"
#import "../storage.jsligo" "Storage"

export const is_owner_of = (ledger: Storage.Types.ledger, token_id: nat, owner: address): bool => {
  // We already sanitized token_id, a failwith here indicated a patological storage
  const current_owner = Option.unopt (Big_map.find_opt (token_id, ledger));
  return (current_owner == owner);
};

const assert_owner_of = (ledger: Storage.Types.ledger, token_id: nat, owner: address): unit =>
  assert_with_error (is_owner_of (ledger, token_id, owner), FA2_Errors.ins_balance);

export const transfer_token_from_user_to_user = (ledger: Storage.Types.ledger, token_id: nat, from_: address, to_: address): Storage.Types.ledger => {
  assert_owner_of (ledger, token_id, from_);
  return Big_map.update (token_id, Some (to_), ledger);
};
