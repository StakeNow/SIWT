/*
 * Copyright (C) 2022, vDL Digital Ventures GmbH <info@vdl.digital>
 *
 * SPDX-License-Identifier: MIT
 */

#import "./errors.jsligo" "FA2_Errors"

export const is_owner_of = ([ledger, token_id, owner]: [big_map<nat, address>, nat, address]): bool => {
    const current_owner = Option.unopt(Big_map.find_opt(token_id, ledger));

    return (current_owner == owner);
};

const assert_owner_of = ([ledger, token_id, owner]: [big_map<nat, address>, nat, address]): unit =>
    assert_with_error(is_owner_of([ledger, token_id, owner]), FA2_Errors.ins_balance);

export const transfer_token_from_user_to_user = ([ledger, token_id, from_, to_]: [big_map<nat, address>, nat, address, address]): big_map<nat, address> => {
  assert_owner_of([ledger, token_id, from_]);
  const updated_ledger = Big_map.update(token_id, Some(to_), ledger);

  return Big_map.update(token_id, Some(to_), updated_ledger);
};
