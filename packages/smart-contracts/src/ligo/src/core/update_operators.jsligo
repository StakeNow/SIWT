/*
 * Copyright (C) 2022, vDL Digital Ventures GmbH <info@vdl.digital>
 *
 * SPDX-License-Identifier: MIT
 */

#import "../storage.jsligo" "Storage"
#import "./storage.jsligo" "FA2_Storage"
#import "./operators.jsligo" "FA2_Operators"

export namespace Types {
  export type operator = 
    // @layout:comb
    {
      owner    : address,
      operator : address,
      token_id : nat,
    };

  export type unit_update      = ["Add_operator", operator] | ["Remove_operator", operator];
  export type update_operators = list<unit_update>;
};

const update_ops = (updates: Types.update_operators, s: Storage.Types.store): [list<operation>, Storage.Types.store] => {
   const update_operator = ([operators,update] : [FA2_Operators.Types.t, Types.unit_update]) : FA2_Operators.Types.t => match (update,
   { Add_operator    : (operator: Types.operator) => FA2_Operators.add_operator (operators, operator.owner, operator.operator, operator.token_id)
   , Remove_operator : (operator: Types.operator) => FA2_Operators.remove_operator (operators, operator.owner, operator.operator, operator.token_id)
   });
   let operators = FA2_Storage.get_operators (s);
   operators = List.fold_left (update_operator, operators, updates);
   const store = FA2_Storage.set_operators (s, operators);
   return [list([]),store];
};
